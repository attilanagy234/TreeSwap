# https://opennmt.net/OpenNMT-py/options/train.html
# https://opennmt.net/OpenNMT-py/FAQ.html


# PREPROCESS

# Additional paths
sp_models_path: sp_models
utils_path: ../../../utils
pair_n_lines: 100
pair_output_path: run/paired.text

translate_model: run/model/model.pt

src_vocab_size: 30000
tgt_vocab_size: 30000

# Where the samples will be written
save_data: samples
# Where the vocab(s) will be written
src_vocab: sp_models/vocab.en
tgt_vocab: sp_models/vocab.hu

# Corpus opts:
data:
    corpus:
        #path_src: /home/bana/Data/combined-tiny/hunglish2-tiny-train.en
        #path_tgt: /home/bana/Data/combined-tiny/hunglish2-tiny-train.hu 
        path_src: /home1/hu-nmt/data/Hunglish2/combined-32-simple/hunglish2-train.en
        path_tgt: /home1/hu-nmt/data/Hunglish2/combined-32-simple/hunglish2-train.hu
        weight: 1
        transforms: [sentencepiece]  # Keep this line while building vocab
        #transforms: [berttokenizer]  # Comment this during vocab generation...
    valid:
        #path_src: /home/bana/Data/combined-tiny/hunglish2-tiny-valid.en
        #path_tgt: /home/bana/Data/combined-tiny/hunglish2-tiny-valid.hu
        path_src: /home1/hu-nmt/data/Hunglish2/combined-32-simple/hunglish2-valid.en
        path_tgt: /home1/hu-nmt/data/Hunglish2/combined-32-simple/hunglish2-valid.hu
        weight: 1
        transforms: [sentencepiece]  # Keep this line while building vocab
        #transforms: [berttokenizer]  # Comment this during vocab generation...


#### Subword
src_subword_model: sp_models/en.model
tgt_subword_model: sp_models/hu.model
src_subword_nbest: 1
src_subword_alpha: 0.0
tgt_subword_nbest: 1
tgt_subword_alpha: 0.0
subword_model_type: unigram

#src_seq_length: 16  # maximum source sequence length
#tgt_seq_length: 16  # maximum target sequence length

# TRAIN

# Train on a single GPU
world_size: 1
gpu_ranks: [0]

# Batching
batch_size: 96
#queue_size: 16
#accum_count: [3]

# General opts
save_model: run/model
keep_checkpoint: 10
save_checkpoint_steps: 10000
average_decay: 0.0005
seed: 1234
report_every: 100
train_steps: 400000
valid_steps: 10000 
single_pass: False
early_stopping: 5 
early_stopping_criteria: ppl

# Optimization
model_dtype: "fp16"
optim: "adam"
learning_rate: 2.0
warmup_steps: 8000
decay_method: "noam"
adam_beta2: 0.998
max_grad_norm: 0
label_smoothing: 0.1
param_init: 0
param_init_glorot: true
normalization: "tokens"

# Model
#train_from: /home/bana/Code/hu-nmt/opennmt/experiments-bert/runs/bert/model_no_qoutes_step_200000.pt
reset_optim: keep_states
encoder_type: transformer  # Dummy, will replaced with pretrained BERT
decoder_type: transformer
enc_layers: 4  # Dummy, will replaced with pretrained BERT
dec_layers: 4
heads: 8
rnn_size: 768
enc_rnn_size: 768
dec_rnn_size: 768
word_vec_size: 768
src_word_vec_size: 768
tgt_word_vec_size: 768
transformer_ff: 2048
dropout_steps: [0]
dropout: [0.1]
attention_dropout: [0.1]
#share_decoder_embeddings: true
encoder_freezed: false

# Logging
log_file: logs
tensorboard: true
tensorboard_log_dir: run/tensorboard
history_path: history