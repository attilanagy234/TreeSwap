name: Tests
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  run_tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.12]
        os: [ubuntu-18.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: pip install poetry==${{ matrix.poetry-version }}
      - name: Cache poetry env
        uses: actions/cache@v3
        id: cache
        with:
          path: ./src/.venv
          key: poetry-${{ hashFiles('./src/pyproject.toml') }}
      - name: Install other dependencies
        run: sudo apt-get install -y graphviz graphviz-dev
      - name: Update poetry config
        working-directory: ./src
        run: poetry config virtualenvs.in-project true
      - name: Install poetry dependencies
        working-directory: ./src
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Run pytest
        working-directory: ./src
        run: PYTHONPATH=. poetry run python -m pytest -v --cov=src/hu_nmt/data_augmentator src/hu_nmt/test/
      
